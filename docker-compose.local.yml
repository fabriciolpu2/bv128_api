version: '3'
services:
    nginx:
        build:
            context: .docker/nginx
            dockerfile: Dockerfile
        ulimits:
            nofile:
                soft: "${ULIMITS_NOFILE_SOFT:-65536}"
                hard: "${ULIMITS_NOFILE_HARD:-1048576}"
        restart: unless-stopped
        tty: true
        ports:
            - "${NGINX_PORT:-80}:80"
            - "${NGINX_SSL_PORT:-443}:443"
        container_name: api_nginx
        environment:
            SERVICE_NAME: api_nginx
            TZ: "${APP_TIMEZONE:-America/Boa_Vista}"
        volumes:
            - '.:/var/www/html'
            - './.docker/nginx/nginx.local.conf:/etc/nginx/nginx.conf'
            - './.docker/nginx/conf.d/api.local.conf:/etc/nginx/conf.d/api.local.conf'
            - './.docker/nginx/logs:/var/log/nginx'
        networks:
            - api-network
        depends_on:
            - php-fpm
    php-fpm:
        build:
            context: .docker/php
            dockerfile: Dockerfile
        ulimits:
            nofile:
                soft: "${ULIMITS_NOFILE_SOFT:-65536}"
                hard: "${ULIMITS_NOFILE_HARD:-1048576}"
        tty: true
        restart: unless-stopped
        container_name: api_php
        environment:
            HOST_IP: '${HOST_IP}'
            SERVICE_NAME: api
            VIRTUAL_HOST: api.local
            LOCALHOST_UID: 1000
            LOCALHOST_USERNAME: ${USER}
            PHP_IDE_CONFIG: 'serverName=xdebug-docker'
            XDEBUG_MODE: '${XDEBUG_MODE:-off}'
            XDEBUG_CLIENT_HOST: '${XDEBUG_CLIENT_HOST:-host.docker.internal}'
            XDEBUG_CLIENT_PORT: '${XDEBUG_CLIENT_PORT:-9003}'
            TZ: "${APP_TIMEZONE:-America/Boa_Vista}"
            PHP_OPCACHE_MEMORY_CONSUMPTION: "${PHP_OPCACHE_MEMORY_CONSUMPTION:-192}"
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: "${PHP_OPCACHE_VALIDATE_TIMESTAMPS:-1}"
            PHP_OPCACHE_MAX_ACCELERATED_FILES: "${PHP_OPCACHE_MAX_ACCELERATED_FILES:-10000}"
            PHP_OPCACHE_MAX_WASTED_PERCENTAGE: "${PHP_OPCACHE_MAX_WASTED_PERCENTAGE:-10}"
            PHP_OPCACHE_REVALIDATE_FREQ: "${PHP_OPCACHE_REVALIDATE_FREQ:-5}"
            PHP_OPCACHE_INTERNED_STRINGS_BUFFER: "${PHP_OPCACHE_INTERNED_STRINGS_BUFFER:-16}"
            PHP_OPCACHE_FAST_SHUTDOWN: "${PHP_OPCACHE_FAST_SHUTDOWN:-1}"
            PHP_OPCACHE_ENABLE_CLI: "${PHP_OPCACHE_ENABLE_CLI:-1}"
            PHP_OPCACHE_SAVE_COMMENTS: "${PHP_OPCACHE_SAVE_COMMENTS:-1}"
            PHP_OPCACHE_HUGE_CODE_PAGES: "${PHP_OPCACHE_HUGE_CODE_PAGES:-1}"
            PHP_OPCACHE_FILE_CACHE: "${PHP_OPCACHE_FILE_CACHE:-/tmp/opcache}"
            PHP_OPCACHE_PRELOAD: "${PHP_OPCACHE_PRELOAD:-/var/www/html/preload.php}"
        volumes:
            - '.:/var/www/html'
            - './.docker/php/php.ini:/usr/local/etc/php/php.ini'
            - './.docker/php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini'
        networks:
            - api-network
        depends_on:
            - redis
        extra_hosts:
            - "host.docker.internal:host-gateway"
    redis:
        build:
            context: .docker/redis
            dockerfile: Dockerfile
        tty: true
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - './.docker/redis/data:/data'
        networks:
            - api-network
        container_name: api_redis
        environment:
            TZ: "${APP_TIMEZONE:-America/Boa_Vista}"
        command: redis-server --requirepass '${REDIS_PASSWORD}' --appendonly yes
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s
    pgsql:
      image: 'postgis/postgis:latest'
      container_name: api_pgsql
      ports:
        - '${FORWARD_DB_PORT:-5432}:5432'
      environment:
        PGPASSWORD: '${DB_PASSWORD:-secret}'
        POSTGRES_DB: '${DB_DATABASE}'
        POSTGRES_USER: '${DB_USERNAME}'
        POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
      volumes:
        - 'api-pgsql:/var/lib/postgresql/data'
      networks:
        - api-network
      healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
        retries: 3
        timeout: 5s
networks:
    api-network:
        driver: bridge
volumes:
    api-redis:
        driver: local
    api-pgsql:
        driver: local
